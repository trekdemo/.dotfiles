# vim: ft=conf fdm=marker

# Use something easier to type as the prefix.
unbind C-b
set -g prefix C-a
bind-key -r C-a send-prefix

# Fish is the default shell
# set -g default-shell /usr/local/bin/fish
set -g default-shell /bin/zsh

set-option -g status-keys "emacs"
set-option -g base-index 1
set-option -g renumber-windows on
# set-option -s default-terminal "xterm-256color"
# set-option -sa terminal-overrides ",*256col*:Tc"
# set-option -s default-terminal "alacritty"
# set-option -sa terminal-overrides ',alacritty:RGB'
set-option -s default-terminal "xterm-kitty"
# set-option -sa terminal-overrides ',alacritty:RGB'
set-option -ga terminal-overrides '*:Ss=\E[%p1%d q:Se=\E[ q'
set-option -g focus-events on
set-option -g mode-keys vi

# ~ Mouse ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
set-option -g mouse on

# ~ Shortcuts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Show git status
bind-key g display-popup -E -w 80% -h 80% -d "#{pane_current_path}" 'tig'
# Open current directory
bind-key o run-shell "open #{pane_current_path}"

# ~ Pane & Session control ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Choose window/session
#   C-a s          choose a session from a list
#   C-a L          ‘last’ (previously used) session
#   C-a K          kill session and switch to next
bind-key c new-window -c "#{pane_current_path}"
bind-key S new-session \; command-prompt "rename-session '%%'"
bind-key , command-prompt "rename-window '%%'"
bind-key < command-prompt "rename-session '%%'"
bind-key s split-window -v select-tmux-session
bind-key P new-window -n "Jump to project" "$HOME/bin/jump-to-project"
bind-key K run-shell 'tmux switch-client -n \; kill-session -t "$(tmux display-message -p "#S")" || tmux kill-session'
bind-key H display-popup '$HOME/bin/cht.sh'
bind-key L display-popup -E '$HOME/bin/hue-scene 3'
# Move windows
bind-key -n C-S-Left swap-window -t -1\; select-window -t -1
bind-key -n C-S-Right swap-window -t +1\; select-window -t +1
# Resizing panes
bind-key -r Left  resize-pane -L 5
bind-key -r Down  resize-pane -D 5
bind-key -r Up    resize-pane -U 5
bind-key -r Right resize-pane -R 5
# Splitting panes
#   C-a |          split current pane horizontally
#   C-a -          split current pane vertically
bind-key "|" split-window -h -c "#{pane_current_path}"
bind-key "-" split-window -v -c "#{pane_current_path}"
# Managing panes
#   C-a B          Move pane to a new window
#   C-a J          Join panes from target window into current window
#   C-a W          Swap current pane with target
bind-key B break-pane -d
bind-key J command-prompt -p "Join pane from: "  "join-pane -h -s '%%'"
bind-key W display-panes\; command-prompt -p "pane #: "  "swap-pane -t '%%'"
unbind Enter
bind Enter resize-pane -Z
bind C-Enter resize-pane -Z


# Navigation
#   prefix + h and prefix + M-h
#   prefix + j and prefix + M-j
#   prefix + k and prefix + M-k
#   prefix + l and prefix + M-l
# Smart pane switching with awareness of vim splits
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"'
bind-key    h   select-pane -L
bind-key -n M-h if-shell "$is_vim" "send-keys M-h" "select-pane -L"
bind-key -n M-Left if-shell "$is_vim" "send-keys M-h" "select-pane -L"
bind-key    j   select-pane -D
bind-key -n M-j if-shell "$is_vim" "send-keys M-j" "select-pane -D"
bind-key -n M-Down if-shell "$is_vim" "send-keys M-j" "select-pane -D"
bind-key    k   select-pane -U
bind-key -n M-k if-shell "$is_vim" "send-keys M-k" "select-pane -U"
bind-key -n M-Up if-shell "$is_vim" "send-keys M-k" "select-pane -U"
bind-key    l   select-pane -R
bind-key -n M-l if-shell "$is_vim" "send-keys M-l" "select-pane -R"
bind-key -n M-Right if-shell "$is_vim" "send-keys M-l" "select-pane -R"

# Switch windows alt+number
bind-key -n M-0 select-window -t 0
bind-key -n M-1 select-window -t 1
bind-key -n M-2 select-window -t 2
bind-key -n M-3 select-window -t 3
bind-key -n M-4 select-window -t 4
bind-key -n M-5 select-window -t 5
bind-key -n M-6 select-window -t 6
bind-key -n M-7 select-window -t 7
bind-key -n M-8 select-window -t 8
bind-key -n M-9 select-window -t 9
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# ~ Vim Copy selection ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# bind-key ESCAPE copy-mode
bind-key -T copy-mode-vi 'H' send -X start-of-line
bind-key -T copy-mode-vi 'L' send -X end-of-line
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel "pbcopy"
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'egel/tmux-gruvbox'
# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'
