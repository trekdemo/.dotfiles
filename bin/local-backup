#!/usr/bin/ruby

# Creates and loads backups for the current project
#
# local-backup <action> <environment> <backup file path>
# local-backup load development ~/Desktop/backup
#   # => loads the given db dump file
# local-backup dump development ~/Desktop/backup
#   # => creates a compressed db dump to the given path

require 'yaml'

class Backup
  def initialize(subcommands)
    @mode,
    @target_environment,
    @target_uri = subcommands
  end

  def start
    case
    when load? then self.load
    when dump? then self.dump
    end
  end

  def load
    system %{
      cat '#{@target_uri}' | \
      pg_restore --verbose --clean --no-acl --no-owner -d #{database}
    }
  end

  def dump
    system %{
      pg_dump -Fc #{database} > '#{@target_uri}'
    }
  end

  private
  def database
    YAML.load(IO.read('config/database.yml'))[@target_environment]['database']
  end

  def load?
    @mode == 'load'
  end

  def dump?
    @mode == 'dump'
  end
end

backup = Backup.new(ARGV)
backup.start
